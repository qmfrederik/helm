// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hapi/rudder/rudder.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Hapi.Services.Rudder {

  /// <summary>Holder for reflection information generated from hapi/rudder/rudder.proto</summary>
  public static partial class RudderReflection {

    #region Descriptor
    /// <summary>File descriptor for hapi/rudder/rudder.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RudderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhoYXBpL3J1ZGRlci9ydWRkZXIucHJvdG8SFGhhcGkuc2VydmljZXMucnVk",
            "ZGVyGhdoYXBpL3JlbGVhc2UvaW5mby5wcm90bxoaaGFwaS9yZWxlYXNlL3Jl",
            "bGVhc2UucHJvdG8iYQoGUmVzdWx0EgwKBGluZm8YASABKAkSCwoDbG9nGAIg",
            "AygJIjwKBlN0YXR1cxILCgdVTktOT1dOEAASCwoHU1VDQ0VTUxABEg0KCVVO",
            "Q0hBTkdFRBACEgkKBUVSUk9SEAMiFwoVVmVyc2lvblJlbGVhc2VSZXF1ZXN0",
            "IjcKFlZlcnNpb25SZWxlYXNlUmVzcG9uc2USDAoEbmFtZRgBIAEoCRIPCgd2",
            "ZXJzaW9uGAIgASgJIj8KFUluc3RhbGxSZWxlYXNlUmVxdWVzdBImCgdyZWxl",
            "YXNlGAEgASgLMhUuaGFwaS5yZWxlYXNlLlJlbGVhc2UibgoWSW5zdGFsbFJl",
            "bGVhc2VSZXNwb25zZRImCgdyZWxlYXNlGAEgASgLMhUuaGFwaS5yZWxlYXNl",
            "LlJlbGVhc2USLAoGcmVzdWx0GAIgASgLMhwuaGFwaS5zZXJ2aWNlcy5ydWRk",
            "ZXIuUmVzdWx0Ij4KFERlbGV0ZVJlbGVhc2VSZXF1ZXN0EiYKB3JlbGVhc2UY",
            "ASABKAsyFS5oYXBpLnJlbGVhc2UuUmVsZWFzZSJtChVEZWxldGVSZWxlYXNl",
            "UmVzcG9uc2USJgoHcmVsZWFzZRgBIAEoCzIVLmhhcGkucmVsZWFzZS5SZWxl",
            "YXNlEiwKBnJlc3VsdBgCIAEoCzIcLmhhcGkuc2VydmljZXMucnVkZGVyLlJl",
            "c3VsdCK9AQoVVXBncmFkZVJlbGVhc2VSZXF1ZXN0EiYKB2N1cnJlbnQYASAB",
            "KAsyFS5oYXBpLnJlbGVhc2UuUmVsZWFzZRIlCgZ0YXJnZXQYAiABKAsyFS5o",
            "YXBpLnJlbGVhc2UuUmVsZWFzZRIPCgdUaW1lb3V0GAMgASgDEgwKBFdhaXQY",
            "BCABKAgSEAoIUmVjcmVhdGUYBSABKAgSDQoFRm9yY2UYBiABKAgSFQoNQ2xl",
            "YW51cE9uRmFpbBgHIAEoCCJuChZVcGdyYWRlUmVsZWFzZVJlc3BvbnNlEiYK",
            "B3JlbGVhc2UYASABKAsyFS5oYXBpLnJlbGVhc2UuUmVsZWFzZRIsCgZyZXN1",
            "bHQYAiABKAsyHC5oYXBpLnNlcnZpY2VzLnJ1ZGRlci5SZXN1bHQivgEKFlJv",
            "bGxiYWNrUmVsZWFzZVJlcXVlc3QSJgoHY3VycmVudBgBIAEoCzIVLmhhcGku",
            "cmVsZWFzZS5SZWxlYXNlEiUKBnRhcmdldBgCIAEoCzIVLmhhcGkucmVsZWFz",
            "ZS5SZWxlYXNlEg8KB1RpbWVvdXQYAyABKAMSDAoEV2FpdBgEIAEoCBIQCghS",
            "ZWNyZWF0ZRgFIAEoCBINCgVGb3JjZRgGIAEoCBIVCg1DbGVhbnVwT25GYWls",
            "GAcgASgIIm8KF1JvbGxiYWNrUmVsZWFzZVJlc3BvbnNlEiYKB3JlbGVhc2UY",
            "ASABKAsyFS5oYXBpLnJlbGVhc2UuUmVsZWFzZRIsCgZyZXN1bHQYAiABKAsy",
            "HC5oYXBpLnNlcnZpY2VzLnJ1ZGRlci5SZXN1bHQiPgoUUmVsZWFzZVN0YXR1",
            "c1JlcXVlc3QSJgoHcmVsZWFzZRgBIAEoCzIVLmhhcGkucmVsZWFzZS5SZWxl",
            "YXNlImEKFVJlbGVhc2VTdGF0dXNSZXNwb25zZRImCgdyZWxlYXNlGAEgASgL",
            "MhUuaGFwaS5yZWxlYXNlLlJlbGVhc2USIAoEaW5mbxgCIAEoCzISLmhhcGku",
            "cmVsZWFzZS5JbmZvMqYFChRSZWxlYXNlTW9kdWxlU2VydmljZRJmCgdWZXJz",
            "aW9uEisuaGFwaS5zZXJ2aWNlcy5ydWRkZXIuVmVyc2lvblJlbGVhc2VSZXF1",
            "ZXN0GiwuaGFwaS5zZXJ2aWNlcy5ydWRkZXIuVmVyc2lvblJlbGVhc2VSZXNw",
            "b25zZSIAEm0KDkluc3RhbGxSZWxlYXNlEisuaGFwaS5zZXJ2aWNlcy5ydWRk",
            "ZXIuSW5zdGFsbFJlbGVhc2VSZXF1ZXN0GiwuaGFwaS5zZXJ2aWNlcy5ydWRk",
            "ZXIuSW5zdGFsbFJlbGVhc2VSZXNwb25zZSIAEmoKDURlbGV0ZVJlbGVhc2US",
            "Ki5oYXBpLnNlcnZpY2VzLnJ1ZGRlci5EZWxldGVSZWxlYXNlUmVxdWVzdBor",
            "LmhhcGkuc2VydmljZXMucnVkZGVyLkRlbGV0ZVJlbGVhc2VSZXNwb25zZSIA",
            "EnAKD1JvbGxiYWNrUmVsZWFzZRIsLmhhcGkuc2VydmljZXMucnVkZGVyLlJv",
            "bGxiYWNrUmVsZWFzZVJlcXVlc3QaLS5oYXBpLnNlcnZpY2VzLnJ1ZGRlci5S",
            "b2xsYmFja1JlbGVhc2VSZXNwb25zZSIAEm0KDlVwZ3JhZGVSZWxlYXNlEisu",
            "aGFwaS5zZXJ2aWNlcy5ydWRkZXIuVXBncmFkZVJlbGVhc2VSZXF1ZXN0Giwu",
            "aGFwaS5zZXJ2aWNlcy5ydWRkZXIuVXBncmFkZVJlbGVhc2VSZXNwb25zZSIA",
            "EmoKDVJlbGVhc2VTdGF0dXMSKi5oYXBpLnNlcnZpY2VzLnJ1ZGRlci5SZWxl",
            "YXNlU3RhdHVzUmVxdWVzdBorLmhhcGkuc2VydmljZXMucnVkZGVyLlJlbGVh",
            "c2VTdGF0dXNSZXNwb25zZSIAQghaBnJ1ZGRlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Hapi.Release.InfoReflection.Descriptor, global::Hapi.Release.ReleaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.Result), global::Hapi.Services.Rudder.Result.Parser, new[]{ "Info", "Log" }, null, new[]{ typeof(global::Hapi.Services.Rudder.Result.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.VersionReleaseRequest), global::Hapi.Services.Rudder.VersionReleaseRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.VersionReleaseResponse), global::Hapi.Services.Rudder.VersionReleaseResponse.Parser, new[]{ "Name", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.InstallReleaseRequest), global::Hapi.Services.Rudder.InstallReleaseRequest.Parser, new[]{ "Release" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.InstallReleaseResponse), global::Hapi.Services.Rudder.InstallReleaseResponse.Parser, new[]{ "Release", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.DeleteReleaseRequest), global::Hapi.Services.Rudder.DeleteReleaseRequest.Parser, new[]{ "Release" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.DeleteReleaseResponse), global::Hapi.Services.Rudder.DeleteReleaseResponse.Parser, new[]{ "Release", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.UpgradeReleaseRequest), global::Hapi.Services.Rudder.UpgradeReleaseRequest.Parser, new[]{ "Current", "Target", "Timeout", "Wait", "Recreate", "Force", "CleanupOnFail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.UpgradeReleaseResponse), global::Hapi.Services.Rudder.UpgradeReleaseResponse.Parser, new[]{ "Release", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.RollbackReleaseRequest), global::Hapi.Services.Rudder.RollbackReleaseRequest.Parser, new[]{ "Current", "Target", "Timeout", "Wait", "Recreate", "Force", "CleanupOnFail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.RollbackReleaseResponse), global::Hapi.Services.Rudder.RollbackReleaseResponse.Parser, new[]{ "Release", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.ReleaseStatusRequest), global::Hapi.Services.Rudder.ReleaseStatusRequest.Parser, new[]{ "Release" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hapi.Services.Rudder.ReleaseStatusResponse), global::Hapi.Services.Rudder.ReleaseStatusResponse.Parser, new[]{ "Release", "Info" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Result : pb::IMessage<Result> {
    private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result(Result other) : this() {
      info_ = other.info_;
      log_ = other.log_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result Clone() {
      return new Result(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log" field.</summary>
    public const int LogFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_log_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> log_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Log {
      get { return log_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Info != other.Info) return false;
      if(!log_.Equals(other.log_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      hash ^= log_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Info.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      log_.WriteTo(output, _repeated_log_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      size += log_.CalculateSize(_repeated_log_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Result other) {
      if (other == null) {
        return;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      log_.Add(other.log_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
          case 18: {
            log_.AddEntriesFrom(input, _repeated_log_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Result message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// No status set
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Operation was successful
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 1,
        /// <summary>
        /// Operation had no results (e.g. upgrade identical, rollback to same, delete non-existent)
        /// </summary>
        [pbr::OriginalName("UNCHANGED")] Unchanged = 2,
        /// <summary>
        /// Operation failed
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 3,
      }

    }
    #endregion

  }

  public sealed partial class VersionReleaseRequest : pb::IMessage<VersionReleaseRequest> {
    private static readonly pb::MessageParser<VersionReleaseRequest> _parser = new pb::MessageParser<VersionReleaseRequest>(() => new VersionReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionReleaseRequest(VersionReleaseRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionReleaseRequest Clone() {
      return new VersionReleaseRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionReleaseRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class VersionReleaseResponse : pb::IMessage<VersionReleaseResponse> {
    private static readonly pb::MessageParser<VersionReleaseResponse> _parser = new pb::MessageParser<VersionReleaseResponse>(() => new VersionReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionReleaseResponse(VersionReleaseResponse other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionReleaseResponse Clone() {
      return new VersionReleaseResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The canonical name of the release module
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// The version of the release module
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionReleaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InstallReleaseRequest : pb::IMessage<InstallReleaseRequest> {
    private static readonly pb::MessageParser<InstallReleaseRequest> _parser = new pb::MessageParser<InstallReleaseRequest>(() => new InstallReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstallReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallReleaseRequest(InstallReleaseRequest other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallReleaseRequest Clone() {
      return new InstallReleaseRequest(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstallReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstallReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstallReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InstallReleaseResponse : pb::IMessage<InstallReleaseResponse> {
    private static readonly pb::MessageParser<InstallReleaseResponse> _parser = new pb::MessageParser<InstallReleaseResponse>(() => new InstallReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstallReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallReleaseResponse(InstallReleaseResponse other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallReleaseResponse Clone() {
      return new InstallReleaseResponse(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Hapi.Services.Rudder.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Services.Rudder.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstallReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstallReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstallReleaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Hapi.Services.Rudder.Result();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Hapi.Services.Rudder.Result();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteReleaseRequest : pb::IMessage<DeleteReleaseRequest> {
    private static readonly pb::MessageParser<DeleteReleaseRequest> _parser = new pb::MessageParser<DeleteReleaseRequest>(() => new DeleteReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReleaseRequest(DeleteReleaseRequest other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReleaseRequest Clone() {
      return new DeleteReleaseRequest(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteReleaseResponse : pb::IMessage<DeleteReleaseResponse> {
    private static readonly pb::MessageParser<DeleteReleaseResponse> _parser = new pb::MessageParser<DeleteReleaseResponse>(() => new DeleteReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReleaseResponse(DeleteReleaseResponse other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteReleaseResponse Clone() {
      return new DeleteReleaseResponse(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Hapi.Services.Rudder.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Services.Rudder.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteReleaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Hapi.Services.Rudder.Result();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Hapi.Services.Rudder.Result();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpgradeReleaseRequest : pb::IMessage<UpgradeReleaseRequest> {
    private static readonly pb::MessageParser<UpgradeReleaseRequest> _parser = new pb::MessageParser<UpgradeReleaseRequest>(() => new UpgradeReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeReleaseRequest(UpgradeReleaseRequest other) : this() {
      Current = other.current_ != null ? other.Current.Clone() : null;
      Target = other.target_ != null ? other.Target.Clone() : null;
      timeout_ = other.timeout_;
      wait_ = other.wait_;
      recreate_ = other.recreate_;
      force_ = other.force_;
      cleanupOnFail_ = other.cleanupOnFail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeReleaseRequest Clone() {
      return new UpgradeReleaseRequest(this);
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 1;
    private global::Hapi.Release.Release current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Current {
      get { return current_; }
      set {
        current_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::Hapi.Release.Release target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "Timeout" field.</summary>
    public const int TimeoutFieldNumber = 3;
    private long timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "Wait" field.</summary>
    public const int WaitFieldNumber = 4;
    private bool wait_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Wait {
      get { return wait_; }
      set {
        wait_ = value;
      }
    }

    /// <summary>Field number for the "Recreate" field.</summary>
    public const int RecreateFieldNumber = 5;
    private bool recreate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Recreate {
      get { return recreate_; }
      set {
        recreate_ = value;
      }
    }

    /// <summary>Field number for the "Force" field.</summary>
    public const int ForceFieldNumber = 6;
    private bool force_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    /// <summary>Field number for the "CleanupOnFail" field.</summary>
    public const int CleanupOnFailFieldNumber = 7;
    private bool cleanupOnFail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CleanupOnFail {
      get { return cleanupOnFail_; }
      set {
        cleanupOnFail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Current, other.Current)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (Timeout != other.Timeout) return false;
      if (Wait != other.Wait) return false;
      if (Recreate != other.Recreate) return false;
      if (Force != other.Force) return false;
      if (CleanupOnFail != other.CleanupOnFail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (current_ != null) hash ^= Current.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (Timeout != 0L) hash ^= Timeout.GetHashCode();
      if (Wait != false) hash ^= Wait.GetHashCode();
      if (Recreate != false) hash ^= Recreate.GetHashCode();
      if (Force != false) hash ^= Force.GetHashCode();
      if (CleanupOnFail != false) hash ^= CleanupOnFail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (current_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Current);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (Timeout != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timeout);
      }
      if (Wait != false) {
        output.WriteRawTag(32);
        output.WriteBool(Wait);
      }
      if (Recreate != false) {
        output.WriteRawTag(40);
        output.WriteBool(Recreate);
      }
      if (Force != false) {
        output.WriteRawTag(48);
        output.WriteBool(Force);
      }
      if (CleanupOnFail != false) {
        output.WriteRawTag(56);
        output.WriteBool(CleanupOnFail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (current_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Current);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (Timeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (Wait != false) {
        size += 1 + 1;
      }
      if (Recreate != false) {
        size += 1 + 1;
      }
      if (Force != false) {
        size += 1 + 1;
      }
      if (CleanupOnFail != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.current_ != null) {
        if (current_ == null) {
          current_ = new global::Hapi.Release.Release();
        }
        Current.MergeFrom(other.Current);
      }
      if (other.target_ != null) {
        if (target_ == null) {
          target_ = new global::Hapi.Release.Release();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.Timeout != 0L) {
        Timeout = other.Timeout;
      }
      if (other.Wait != false) {
        Wait = other.Wait;
      }
      if (other.Recreate != false) {
        Recreate = other.Recreate;
      }
      if (other.Force != false) {
        Force = other.Force;
      }
      if (other.CleanupOnFail != false) {
        CleanupOnFail = other.CleanupOnFail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (current_ == null) {
              current_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(current_);
            break;
          }
          case 18: {
            if (target_ == null) {
              target_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(target_);
            break;
          }
          case 24: {
            Timeout = input.ReadInt64();
            break;
          }
          case 32: {
            Wait = input.ReadBool();
            break;
          }
          case 40: {
            Recreate = input.ReadBool();
            break;
          }
          case 48: {
            Force = input.ReadBool();
            break;
          }
          case 56: {
            CleanupOnFail = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpgradeReleaseResponse : pb::IMessage<UpgradeReleaseResponse> {
    private static readonly pb::MessageParser<UpgradeReleaseResponse> _parser = new pb::MessageParser<UpgradeReleaseResponse>(() => new UpgradeReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeReleaseResponse(UpgradeReleaseResponse other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeReleaseResponse Clone() {
      return new UpgradeReleaseResponse(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Hapi.Services.Rudder.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Services.Rudder.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeReleaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Hapi.Services.Rudder.Result();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Hapi.Services.Rudder.Result();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RollbackReleaseRequest : pb::IMessage<RollbackReleaseRequest> {
    private static readonly pb::MessageParser<RollbackReleaseRequest> _parser = new pb::MessageParser<RollbackReleaseRequest>(() => new RollbackReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackReleaseRequest(RollbackReleaseRequest other) : this() {
      Current = other.current_ != null ? other.Current.Clone() : null;
      Target = other.target_ != null ? other.Target.Clone() : null;
      timeout_ = other.timeout_;
      wait_ = other.wait_;
      recreate_ = other.recreate_;
      force_ = other.force_;
      cleanupOnFail_ = other.cleanupOnFail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackReleaseRequest Clone() {
      return new RollbackReleaseRequest(this);
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 1;
    private global::Hapi.Release.Release current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Current {
      get { return current_; }
      set {
        current_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::Hapi.Release.Release target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "Timeout" field.</summary>
    public const int TimeoutFieldNumber = 3;
    private long timeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "Wait" field.</summary>
    public const int WaitFieldNumber = 4;
    private bool wait_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Wait {
      get { return wait_; }
      set {
        wait_ = value;
      }
    }

    /// <summary>Field number for the "Recreate" field.</summary>
    public const int RecreateFieldNumber = 5;
    private bool recreate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Recreate {
      get { return recreate_; }
      set {
        recreate_ = value;
      }
    }

    /// <summary>Field number for the "Force" field.</summary>
    public const int ForceFieldNumber = 6;
    private bool force_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    /// <summary>Field number for the "CleanupOnFail" field.</summary>
    public const int CleanupOnFailFieldNumber = 7;
    private bool cleanupOnFail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CleanupOnFail {
      get { return cleanupOnFail_; }
      set {
        cleanupOnFail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Current, other.Current)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (Timeout != other.Timeout) return false;
      if (Wait != other.Wait) return false;
      if (Recreate != other.Recreate) return false;
      if (Force != other.Force) return false;
      if (CleanupOnFail != other.CleanupOnFail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (current_ != null) hash ^= Current.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (Timeout != 0L) hash ^= Timeout.GetHashCode();
      if (Wait != false) hash ^= Wait.GetHashCode();
      if (Recreate != false) hash ^= Recreate.GetHashCode();
      if (Force != false) hash ^= Force.GetHashCode();
      if (CleanupOnFail != false) hash ^= CleanupOnFail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (current_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Current);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (Timeout != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timeout);
      }
      if (Wait != false) {
        output.WriteRawTag(32);
        output.WriteBool(Wait);
      }
      if (Recreate != false) {
        output.WriteRawTag(40);
        output.WriteBool(Recreate);
      }
      if (Force != false) {
        output.WriteRawTag(48);
        output.WriteBool(Force);
      }
      if (CleanupOnFail != false) {
        output.WriteRawTag(56);
        output.WriteBool(CleanupOnFail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (current_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Current);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (Timeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (Wait != false) {
        size += 1 + 1;
      }
      if (Recreate != false) {
        size += 1 + 1;
      }
      if (Force != false) {
        size += 1 + 1;
      }
      if (CleanupOnFail != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.current_ != null) {
        if (current_ == null) {
          current_ = new global::Hapi.Release.Release();
        }
        Current.MergeFrom(other.Current);
      }
      if (other.target_ != null) {
        if (target_ == null) {
          target_ = new global::Hapi.Release.Release();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.Timeout != 0L) {
        Timeout = other.Timeout;
      }
      if (other.Wait != false) {
        Wait = other.Wait;
      }
      if (other.Recreate != false) {
        Recreate = other.Recreate;
      }
      if (other.Force != false) {
        Force = other.Force;
      }
      if (other.CleanupOnFail != false) {
        CleanupOnFail = other.CleanupOnFail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (current_ == null) {
              current_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(current_);
            break;
          }
          case 18: {
            if (target_ == null) {
              target_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(target_);
            break;
          }
          case 24: {
            Timeout = input.ReadInt64();
            break;
          }
          case 32: {
            Wait = input.ReadBool();
            break;
          }
          case 40: {
            Recreate = input.ReadBool();
            break;
          }
          case 48: {
            Force = input.ReadBool();
            break;
          }
          case 56: {
            CleanupOnFail = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RollbackReleaseResponse : pb::IMessage<RollbackReleaseResponse> {
    private static readonly pb::MessageParser<RollbackReleaseResponse> _parser = new pb::MessageParser<RollbackReleaseResponse>(() => new RollbackReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackReleaseResponse(RollbackReleaseResponse other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackReleaseResponse Clone() {
      return new RollbackReleaseResponse(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Hapi.Services.Rudder.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Services.Rudder.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackReleaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Hapi.Services.Rudder.Result();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Hapi.Services.Rudder.Result();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReleaseStatusRequest : pb::IMessage<ReleaseStatusRequest> {
    private static readonly pb::MessageParser<ReleaseStatusRequest> _parser = new pb::MessageParser<ReleaseStatusRequest>(() => new ReleaseStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleaseStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatusRequest(ReleaseStatusRequest other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatusRequest Clone() {
      return new ReleaseStatusRequest(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleaseStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleaseStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleaseStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReleaseStatusResponse : pb::IMessage<ReleaseStatusResponse> {
    private static readonly pb::MessageParser<ReleaseStatusResponse> _parser = new pb::MessageParser<ReleaseStatusResponse>(() => new ReleaseStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleaseStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hapi.Services.Rudder.RudderReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatusResponse(ReleaseStatusResponse other) : this() {
      Release = other.release_ != null ? other.Release.Clone() : null;
      Info = other.info_ != null ? other.Info.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatusResponse Clone() {
      return new ReleaseStatusResponse(this);
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 1;
    private global::Hapi.Release.Release release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Release Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Hapi.Release.Info info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hapi.Release.Info Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleaseStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleaseStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (release_ != null) hash ^= Release.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (release_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Release);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleaseStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Hapi.Release.Release();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          info_ = new global::Hapi.Release.Info();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (release_ == null) {
              release_ = new global::Hapi.Release.Release();
            }
            input.ReadMessage(release_);
            break;
          }
          case 18: {
            if (info_ == null) {
              info_ = new global::Hapi.Release.Info();
            }
            input.ReadMessage(info_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
